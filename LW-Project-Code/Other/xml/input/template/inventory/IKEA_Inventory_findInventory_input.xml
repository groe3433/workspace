<?xml version="1.0" encoding="iso-8859-1"?>
<!--
Licensed Materials - Property of IBM
IBM Sterling Selling And Fulfillment Suite
(C) Copyright IBM Corp. 2005, 2013 All Rights Reserved.
US Government Users Restricted Rights - Use, duplication or disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
-->
<Promise AllocationRuleID="${Promise.AllocationRuleID}"
    CarrierServiceCode="${Promise.CarrierServiceCode}"
    CheckInventory="${Promise.CheckInventory}"
    ConsiderCurrentSlot="${Promise.ConsiderCurrentSlot}"
    ConsiderSupplementalCapacity="${Promise.ConsiderSupplementalCapacity}"
    CustomerID="${Promise.CustomerID}"
    DeliveryDateBased="${Promise.DeliveryDateBased}"
    DemandType="${Promise.DemandType}"
    DependencyShippingRule="${Promise.DependencyShippingRule}"
    DistanceToConsider="${Promise.DistanceToConsider}"
    DistanceUOMToConsider="${Promise.DistanceUOMToConsider}"
    DistributionRuleId="${Promise.DistributionRuleId}"
    EnterpriseCode="${Promise.EnterpriseCode}"
    FillQuantity="${Promise.FillQuantity}"
    FulfillmentType="${Promise.FulfillmentType}"
    IgnoreMinNotificationTime="${Promise.IgnoreMinNotificationTime}"
    IgnorePromised="${Promise.IgnorePromised}"
    IgnoreUnpromised="${Promise.IgnoreUnpromised}"
    IsPartialSubstitutionAllowed="${Promise.IsPartialSubstitutionAllowed}"
    IsSubstitutionAllowed="${Promise.IsSubstitutionAllowed}"
    MaximumRecords="${Promise.MaximumRecords}"
    OptimizationType="${Promise.OptimizationType}"
    OrganizationCode="${Promise.OrganizationCode}"
    ReceivingNode="${Promise.ReceivingNode}"
    ReqEndDate="${Promise.ReqEndDate}"
    ReqStartDate="${Promise.ReqStartDate}"
    ReturnMultipleSrvcSlots="${Promise.ReturnMultipleSrvcSlots}"
    ReturnSlotsWithUnavailableCapacity="${Promise.ReturnSlotsWithUnavailableCapacity}"
    SCAC="${Promise.SCAC}"
    ScacAndServiceKey="${Promise.ScacAndServiceKey}"
    Segment="${Promise.Segment}" SegmentType="${Promise.SegmentType}"
    ShipNode="${Promise.ShipNode}"
    ShipTogetherInRatio="${Promise.ShipTogetherInRatio}"
    SourcingClassification="${Promise.SourcingClassification}"
            UseUnplannedInventory="${Promise.UseUnplannedInventory}">
			<PromiseLines>
        <PromiseLine
            BundleFulfillmentMode="${Promise.PromiseLines.PromiseLine.BundleFulfillmentMode}"
            BundleParentLineId="${Promise.PromiseLines.PromiseLine.BundleParentLineId}"
            CarrierServiceCode="${Promise.PromiseLines.PromiseLine.CarrierServiceCode}"
            DeliveryMethod="${Promise.PromiseLines.PromiseLine.DeliveryMethod}"
            DepartmentCode="${Promise.PromiseLines.PromiseLine.DepartmentCode}"
            DistributionRuleId="${Promise.PromiseLines.PromiseLine.DistributionRuleId}"
            FillQuantity="${Promise.PromiseLines.PromiseLine.FillQuantity}"
            FreightTerms="${Promise.PromiseLines.PromiseLine.FreightTerms}"
            FulfillmentType="${Promise.PromiseLines.PromiseLine.FulfillmentType}"
            GiftWrap="${Promise.PromiseLines.PromiseLine.GiftWrap}"
            GroupID="${Promise.PromiseLines.PromiseLine.GroupID}"
            IsForwardingAllowed="${Promise.PromiseLines.PromiseLine.IsForwardingAllowed}"
            IsProcurementAllowed="${Promise.PromiseLines.PromiseLine.IsProcurementAllowed}"
            ItemID="${Promise.PromiseLines.PromiseLine.ItemID}"
            KitCode="${Promise.PromiseLines.PromiseLine.KitCode}"
            KitQty="${Promise.PromiseLines.PromiseLine.KitQty}"
            LevelOfService="${Promise.PromiseLines.PromiseLine.LevelOfService}"
            LineId="${Promise.PromiseLines.PromiseLine.LineId}"
            MinShipByDate="${Promise.PromiseLines.PromiseLine.MinShipByDate}"
            OrderLineReference="${Promise.PromiseLines.PromiseLine.OrderLineReference}"
            ProcureFromNode="${Promise.PromiseLines.PromiseLine.ProcureFromNode}"
            ProductClass="${Promise.PromiseLines.PromiseLine.ProductClass}"
            ReceivingNode="${Promise.PromiseLines.PromiseLine.ReceivingNode}"
            ReqEndDate="${Promise.PromiseLines.PromiseLine.ReqEndDate}"
            ReqStartDate="${Promise.PromiseLines.PromiseLine.ReqStartDate}"
            RequiredQty="${Promise.PromiseLines.PromiseLine.RequiredQty}"
            SCAC="${Promise.PromiseLines.PromiseLine.SCAC}"
            ScacAndServiceKey="${Promise.PromiseLines.PromiseLine.ScacAndServiceKey}"
            Segment="${Promise.PromiseLines.PromiseLine.Segment}"
            SegmentType="${Promise.PromiseLines.PromiseLine.SegmentType}"
            ShipNode="${Promise.PromiseLines.PromiseLine.ShipNode}"
            UnitOfMeasure="${Promise.PromiseLines.PromiseLine.UnitOfMeasure}">
</PromiseLine>
</PromiseLines>

	<SuggestedOption>
		<Option
            AvailableFromUnplannedInventory="${Promise.SuggestedOption.Option.AvailableFromUnplannedInventory}"
            FirstDate="${Promise.SuggestedOption.Option.FirstDate}"
            HasAnyUnavailableQty="${Promise.SuggestedOption.Option.HasAnyUnavailableQty}"
            LastDate="${Promise.SuggestedOption.Option.LastDate}"
            LeastPriority="${Promise.SuggestedOption.Option.LeastPriority}"
            MaxPriority="${Promise.SuggestedOption.Option.MaxPriority}"
            NodeQty="${Promise.SuggestedOption.Option.NodeQty}"
            OptionNo="${Promise.SuggestedOption.Option.OptionNo}"
                TotalShipments="${Promise.SuggestedOption.Option.TotalShipments}">
			<PromiseLines
                    TotalNumberOfRecords="${Promise.SuggestedOption.Option.PromiseLines.TotalNumberOfRecords}">
				<PromiseLine
                    AutoReplacedByPreferredSubstitute="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.AutoReplacedByPreferredSubstitute}"
                    BundleParentLineId="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.BundleParentLineId}"
                    CarrierServiceCode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.CarrierServiceCode}"
                    DeliveryMethod="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.DeliveryMethod}"
                    DistributionRuleId="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.DistributionRuleId}"
                    FillQuantity="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.FillQuantity}"
                    FulfillmentType="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.FulfillmentType}"
                    IsBundleParent="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.IsBundleParent}"
                    ItemID="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ItemID}"
                    KitQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.KitQty}"
                    LineId="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.LineId}"
                    MinShipByDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.MinShipByDate}"
                    NewItemID="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.NewItemID}"
                    ProductClass="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ProductClass}"
                    ReceivingNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ReceivingNode}"
                    ReqEndDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ReqEndDate}"
                    ReqStartDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ReqStartDate}"
                    RequiredQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.RequiredQty}"
                    SCAC="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.SCAC}"
                    ScacAndServiceKey="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ScacAndServiceKey}"
                    Segment="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Segment}"
                    SegmentType="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.SegmentType}"
                    ShipNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.ShipNode}"
                    TagNumber="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.TagNumber}"
                        UnitOfMeasure="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.UnitOfMeasure}">
					<Assignments
                            TotalNumberOfRecords="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.TotalNumberOfRecords}">
						<Assignment
                            AvailableFromUnplannedInventory="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.AvailableFromUnplannedInventory}"
                            DeliveryDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.DeliveryDate}"
                            Distance="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Distance}"
                            EmptyAssignmentReason="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.EmptyAssignmentReason}"
                            ExternalNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ExternalNode}"
                            InteractionNo="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.InteractionNo}"
                            IsIdleAsset="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.IsIdleAsset}"
                            MergeNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.MergeNode}"
                            NodePriority="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.NodePriority}"
                            ProcuredQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ProcuredQty}"
                            ProductAvailDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ProductAvailDate}"
                            Quantity="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Quantity}"
                            ReservedQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ReservedQty}"
                            SCAC="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SCAC}"
                            SegmentChangeQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SegmentChangeQty}"
                            ShipDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ShipDate}"
                            ShipNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.ShipNode}"
                                    SubstitutedQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstitutedQty}">
							<SubstituteItems>
								<SubstituteItem
                                    IsIdleAsset="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.IsIdleAsset}"
                                    ItemID="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ItemID}"
                                    ProcuredQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ProcuredQty}"
                                    ProductClass="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ProductClass}"
                                    Quantity="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Quantity}"
                                    ReservedQty="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ReservedQty}"
                                    UOM="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.UOM}">
									<Procurements>
										<Procurement
                                    IsIdleAsset="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.IsIdleAsset}"
                                    ProcureFromNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.ProcureFromNode}"
                                    Quantity="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.Quantity}"
                                    ShipDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.ShipDate}"/>
									</Procurements>
								</SubstituteItem>
							</SubstituteItems>
							<Procurements>
								<Procurement
                                    AwaitingReservationAcceptance="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.AwaitingReservationAcceptance}"
                                    IsIdleAsset="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.IsIdleAsset}"
                                    ProcureFromNode="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ProcureFromNode}"
                                    ProductAvailDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ProductAvailDate}"
                                    Quantity="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.Quantity}"
                ShipDate="${Promise.SuggestedOption.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ShipDate}"/>
							</Procurements>
						</Assignment>
					</Assignments>
				</PromiseLine>
			</PromiseLines>
			<PromiseServiceLines
                    TotalNumberOfRecords="${Promise.SuggestedOption.Option.PromiseServiceLines.TotalNumberOfRecords}">
				<PromiseServiceLine
                    BundleParentLineId="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.BundleParentLineId}"
                    ComputeServiceQty="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ComputeServiceQty}"
                    FulfillmentType="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.FulfillmentType}"
                    IsBundleParent="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.IsBundleParent}"
                    ItemGroupCode="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ItemGroupCode}"
                    ItemID="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ItemID}"
                    KitQty="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.KitQty}"
                    LineId="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.LineId}"
                    ReceivingNode="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ReceivingNode}"
                    ReqEndDate="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ReqEndDate}"
                    ReqStartDate="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ReqStartDate}"
                    RequiredCapacity="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.RequiredCapacity}"
                    RequiredQty="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.RequiredQty}"
                    ResourcePoolID="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ResourcePoolID}"
                    ResourcePoolKey="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ResourcePoolKey}"
                    ShipNode="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.ShipNode}"
                        UnitOfMeasure="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.UnitOfMeasure}">
					<Assignments
                            TotalNumberOfRecords="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.TotalNumberOfRecords}">
						<Assignment
                            ApptDate="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptDate}"
                            ApptEndTimestamp="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptEndTimestamp}"
                            ApptStartTimestamp="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptStartTimestamp}"
                            EndTime="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.EndTime}"
                            ExternalNode="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ExternalNode}"
                            InteractionNo="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.InteractionNo}"
                            NodePriority="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.NodePriority}"
                            SCAC="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.SCAC}"
                            ShipNode="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ShipNode}"
                            StartTime="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.StartTime}"
                        TimeZone="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.TimeZone}"/>
					</Assignments>
					<Slots
                        TimeZone="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.TimeZone}"
                            TotalNumberOfRecords="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.TotalNumberOfRecords}">
						<Slot
                            EndTime="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.EndTime}"
                            ServiceSlotDesc="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.ServiceSlotDesc}"
                            SlotEnd="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.SlotEnd}"
                            SlotStart="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.SlotStart}"
                                    StartTime="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.StartTime}">
						<AvailableDates>
							<AvailableDate
                                    AvailableCapacity="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.AvailableCapacity}"
                                    CapacityAvailable="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.CapacityAvailable}"
                                    Confirmed="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Confirmed}"
                                    Date="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Date}"
                                    Preferred="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Preferred}"
                                    RegionServiced="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.RegionServiced}">
								<ResourcePools>
									<ResourcePool
                                    CapacityAvailable="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.CapacityAvailable}"
                                    Confirmed="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.Confirmed}"
                                    RegionServiced="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.RegionServiced}"
                                    ResourcePoolId="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ResourcePoolId}"
                                    ResourcePoolKey="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ResourcePoolKey}"
                                    ServiceResource="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ServiceResource}">
										<AdditionalCapacityLimits>
											<AdditionalCapacityLimit
                                    CapacityUnitOfMeasure="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.AdditionalCapacityLimits.AdditionalCapacityLimit.CapacityUnitOfMeasure}"
                RequiredCapacity="${Promise.SuggestedOption.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.AdditionalCapacityLimits.AdditionalCapacityLimit.RequiredCapacity}"/>
										</AdditionalCapacityLimits>
									</ResourcePool>
								</ResourcePools>
							</AvailableDate>
						</AvailableDates>
						</Slot>
					</Slots>					
				</PromiseServiceLine>
			</PromiseServiceLines>
			<Interactions
                    TotalNumberOfRecords="${Promise.SuggestedOption.Option.Interactions.TotalNumberOfRecords}">
				<Interaction
                    ApptEndTimestamp="${Promise.SuggestedOption.Option.Interactions.Interaction.ApptEndTimestamp}"
                    ApptStartTimestamp="${Promise.SuggestedOption.Option.Interactions.Interaction.ApptStartTimestamp}"
                    Carrier="${Promise.SuggestedOption.Option.Interactions.Interaction.Carrier}"
                    CarrierServiceCode="${Promise.SuggestedOption.Option.Interactions.Interaction.CarrierServiceCode}"
                    DeliveryDate="${Promise.SuggestedOption.Option.Interactions.Interaction.DeliveryDate}"
                    DeliveryMethod="${Promise.SuggestedOption.Option.Interactions.Interaction.DeliveryMethod}"
                    EarliestDate="${Promise.SuggestedOption.Option.Interactions.Interaction.EarliestDate}"
                    InteractionNo="${Promise.SuggestedOption.Option.Interactions.Interaction.InteractionNo}"
                    IsDelivery="${Promise.SuggestedOption.Option.Interactions.Interaction.IsDelivery}"
                    ItemGroupCode="${Promise.SuggestedOption.Option.Interactions.Interaction.ItemGroupCode}"
                    LastDate="${Promise.SuggestedOption.Option.Interactions.Interaction.LastDate}"
                    Node="${Promise.SuggestedOption.Option.Interactions.Interaction.Node}"
                    OrganizationCode="${Promise.SuggestedOption.Option.Interactions.Interaction.OrganizationCode}"
                    ShipDate="${Promise.SuggestedOption.Option.Interactions.Interaction.ShipDate}"
                        TotalHandlingUnits="${Promise.SuggestedOption.Option.Interactions.Interaction.TotalHandlingUnits}">
					<PersonInfoShipTo
                        AddressLine1="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine1}"
                        AddressLine2="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine2}"
                        AddressLine3="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine3}"
                        AddressLine4="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine4}"
                        AddressLine5="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine5}"
                        AddressLine6="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine6}"
                        AlternateEmailID="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.AlternateEmailID}"
                        Beeper="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Beeper}"
                        City="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.City}"
                        Company="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Company}"
                        Country="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Country}"
                        DayFaxNo="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.DayFaxNo}"
                        DayPhone="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.DayPhone}"
                        Department="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Department}"
                        EMailID="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.EMailID}"
                        ErrorTxt="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.ErrorTxt}"
                        EveningFaxNo="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.EveningFaxNo}"
                        EveningPhone="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.EveningPhone}"
                        FirstName="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.FirstName}"
                        HttpUrl="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.HttpUrl}"
                        IsAddressVerified="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.IsAddressVerified}"
                        IsCommercialAddress="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.IsCommercialAddress}"
                        JobTitle="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.JobTitle}"
                        LastName="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.LastName}"
                        Latitude="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Latitude}"
                        Longitude="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Longitude}"
                        MiddleName="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.MiddleName}"
                        MobilePhone="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.MobilePhone}"
                        OtherPhone="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.OtherPhone}"
                        PersonID="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.PersonID}"
                        PreferredShipAddress="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.PreferredShipAddress}"
                        State="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.State}"
                        Suffix="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Suffix}"
                        TaxGeoCode="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.TaxGeoCode}"
                        Title="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.Title}"
                        UseCount="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.UseCount}"
                        VerificationStatus="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.VerificationStatus}"
                        ZipCode="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.ZipCode}"
                            isHistory="${Promise.SuggestedOption.Option.Interactions.Interaction.PersonInfoShipTo.isHistory}"/>
					<NonWorkingDays>
						<NonWorkingDay
                Date="${Promise.SuggestedOption.Option.Interactions.Interaction.NonWorkingDays.NonWorkingDay.Date}"/>
					</NonWorkingDays>
				</Interaction>
			</Interactions>
		</Option>
		<UnavailableLines>
			<UnavailableLine
                AssignedQty="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.AssignedQty}"
                ItemGroupCode="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.ItemGroupCode}"
                ItemID="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.ItemID}"
                LineId="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.LineId}"
                ProductClass="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.ProductClass}"
                RequiredQty="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.RequiredQty}"
                UnavailableReason="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.UnavailableReason}"
                        UnitOfMeasure="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.UnitOfMeasure}">
				<Messages>
					<Message
        Text="${Promise.SuggestedOption.UnavailableLines.UnavailableLine.Messages.Message.Text}"/>
				</Messages>
			</UnavailableLine>
		</UnavailableLines>
	</SuggestedOption>
	<Options
            TotalNumberOfRecords="${Promise.Options.TotalNumberOfRecords}">
		<Option
            AvailableFromUnplannedInventory="${Promise.Options.Option.AvailableFromUnplannedInventory}"
            FirstDate="${Promise.Options.Option.FirstDate}"
            HasAnyUnavailableQty="${Promise.Options.Option.HasAnyUnavailableQty}"
            LastDate="${Promise.Options.Option.LastDate}"
            LeastPriority="${Promise.Options.Option.LeastPriority}"
            MaxPriority="${Promise.Options.Option.MaxPriority}"
            OptionNo="${Promise.Options.Option.OptionNo}"
                TotalShipments="${Promise.Options.Option.TotalShipments}">
			<PromiseLines
                    TotalNumberOfRecords="${Promise.Options.Option.PromiseLines.TotalNumberOfRecords}">
				<PromiseLine
                    AutoReplacedByPreferredSubstitute="${Promise.Options.Option.PromiseLines.PromiseLine.AutoReplacedByPreferredSubstitute}"
                    BundleParentLineId="${Promise.Options.Option.PromiseLines.PromiseLine.BundleParentLineId}"
                    CarrierServiceCode="${Promise.Options.Option.PromiseLines.PromiseLine.CarrierServiceCode}"
                    DeliveryMethod="${Promise.Options.Option.PromiseLines.PromiseLine.DeliveryMethod}"
                    DistributionRuleId="${Promise.Options.Option.PromiseLines.PromiseLine.DistributionRuleId}"
                    FillQuantity="${Promise.Options.Option.PromiseLines.PromiseLine.FillQuantity}"
                    FulfillmentType="${Promise.Options.Option.PromiseLines.PromiseLine.FulfillmentType}"
                    IsBundleParent="${Promise.Options.Option.PromiseLines.PromiseLine.IsBundleParent}"
                    ItemID="${Promise.Options.Option.PromiseLines.PromiseLine.ItemID}"
                    KitQty="${Promise.Options.Option.PromiseLines.PromiseLine.KitQty}"
                    LineId="${Promise.Options.Option.PromiseLines.PromiseLine.LineId}"
                    MinShipByDate="${Promise.Options.Option.PromiseLines.PromiseLine.MinShipByDate}"
                    NewItemID="${Promise.Options.Option.PromiseLines.PromiseLine.NewItemID}"
                    ProductClass="${Promise.Options.Option.PromiseLines.PromiseLine.ProductClass}"
                    ReceivingNode="${Promise.Options.Option.PromiseLines.PromiseLine.ReceivingNode}"
                    ReqEndDate="${Promise.Options.Option.PromiseLines.PromiseLine.ReqEndDate}"
                    ReqStartDate="${Promise.Options.Option.PromiseLines.PromiseLine.ReqStartDate}"
                    RequiredQty="${Promise.Options.Option.PromiseLines.PromiseLine.RequiredQty}"
                    SCAC="${Promise.Options.Option.PromiseLines.PromiseLine.SCAC}"
                    ScacAndServiceKey="${Promise.Options.Option.PromiseLines.PromiseLine.ScacAndServiceKey}"
                    Segment="${Promise.Options.Option.PromiseLines.PromiseLine.Segment}"
                    SegmentType="${Promise.Options.Option.PromiseLines.PromiseLine.SegmentType}"
                    ShipNode="${Promise.Options.Option.PromiseLines.PromiseLine.ShipNode}"
                    TagNumber="${Promise.Options.Option.PromiseLines.PromiseLine.TagNumber}"
                        UnitOfMeasure="${Promise.Options.Option.PromiseLines.PromiseLine.UnitOfMeasure}">
					<Assignments
                            TotalNumberOfRecords="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.TotalNumberOfRecords}">
						<Assignment
                            AvailableFromUnplannedInventory="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.AvailableFromUnplannedInventory}"
                            DeliveryDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.DeliveryDate}"
                            Distance="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Distance}"
                            EmptyAssignmentReason="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.EmptyAssignmentReason}"
                            ExternalNode="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.ExternalNode}"
                            InteractionNo="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.InteractionNo}"
                            MergeNode="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.MergeNode}"
                            NodePriority="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.NodePriority}"
                            ProcuredQty="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.ProcuredQty}"
                            ProductAvailDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.ProductAvailDate}"
                            Quantity="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Quantity}"
                            SCAC="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SCAC}"
                            SegmentChangeQty="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SegmentChangeQty}"
                            ShipDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.ShipDate}"
                            ShipNode="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.ShipNode}"
                                    SubstitutedQty="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstitutedQty}">
							<SubstituteItems>
								<SubstituteItem
                                    ItemID="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ItemID}"
                                    ProductClass="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.ProductClass}"
                                    Quantity="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Quantity}"
                                    UOM="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.UOM}">
									<Procurements>
										<Procurement
                                    ProcureFromNode="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.ProcureFromNode}"
                                    Quantity="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.Quantity}"
                                    ShipDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.SubstituteItems.SubstituteItem.Procurements.Procurement.ShipDate}"/>
									</Procurements>
								</SubstituteItem>
							</SubstituteItems>
							<Procurements>
								<Procurement
                                    AwaitingReservationAcceptance="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.AwaitingReservationAcceptance}"
                                    ProcureFromNode="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ProcureFromNode}"
                                    ProductAvailDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ProductAvailDate}"
                                    Quantity="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.Quantity}"
                ShipDate="${Promise.Options.Option.PromiseLines.PromiseLine.Assignments.Assignment.Procurements.Procurement.ShipDate}"/>
							</Procurements>
						</Assignment>
					</Assignments>
				</PromiseLine>
			</PromiseLines>
			<PromiseServiceLines
                    TotalNumberOfRecords="${Promise.Options.Option.PromiseServiceLines.TotalNumberOfRecords}">
				<PromiseServiceLine
                    BundleParentLineId="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.BundleParentLineId}"
                    ComputeServiceQty="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ComputeServiceQty}"
                    FulfillmentType="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.FulfillmentType}"
                    IsBundleParent="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.IsBundleParent}"
                    ItemGroupCode="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ItemGroupCode}"
                    ItemID="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ItemID}"
                    KitQty="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.KitQty}"
                    LineId="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.LineId}"
                    ReceivingNode="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ReceivingNode}"
                    ReqEndDate="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ReqEndDate}"
                    ReqStartDate="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ReqStartDate}"
                    RequiredCapacity="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.RequiredCapacity}"
                    RequiredQty="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.RequiredQty}"
                    ResourcePoolID="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ResourcePoolID}"
                    ResourcePoolKey="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ResourcePoolKey}"
                    ShipNode="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.ShipNode}"
                        UnitOfMeasure="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.UnitOfMeasure}">
					<Assignments
                            TotalNumberOfRecords="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.TotalNumberOfRecords}">
						<Assignment
                            ApptDate="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptDate}"
                            ApptEndTimestamp="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptEndTimestamp}"
                            ApptStartTimestamp="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ApptStartTimestamp}"
                            EndTime="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.EndTime}"
                            ExternalNode="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ExternalNode}"
                            InteractionNo="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.InteractionNo}"
                            NodePriority="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.NodePriority}"
                            SCAC="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.SCAC}"
                            ShipNode="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.ShipNode}"
                            StartTime="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.StartTime}"
                        TimeZone="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Assignments.Assignment.TimeZone}"/>
					</Assignments>
					<Slots
                        TimeZone="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.TimeZone}"
                            TotalNumberOfRecords="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.TotalNumberOfRecords}">
						<Slot
                            EndTime="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.EndTime}"
                            ServiceSlotDesc="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.ServiceSlotDesc}"
                            SlotEnd="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.SlotEnd}"
                            SlotStart="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.SlotStart}"
                                    StartTime="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.StartTime}">
							<AvailableDates>
								<AvailableDate
                                    AvailableCapacity="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.AvailableCapacity}"
                                    CapacityAvailable="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.CapacityAvailable}"
                                    Confirmed="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Confirmed}"
                                    Date="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Date}"
                                    Preferred="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.Preferred}"
                                    RegionServiced="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.RegionServiced}">
									<ResourcePools>
										<ResourcePool
                                    CapacityAvailable="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.CapacityAvailable}"
                                    Confirmed="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.Confirmed}"
                                    RegionServiced="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.RegionServiced}"
                                    ResourcePoolId="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ResourcePoolId}"
                                    ResourcePoolKey="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ResourcePoolKey}"
                            ServiceResource="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.Slots.Slot.AvailableDates.AvailableDate.ResourcePools.ResourcePool.ServiceResource}"/>
									</ResourcePools>
								</AvailableDate>
							</AvailableDates>
						</Slot>
					</Slots>
					<AdditionalCapacityLimits>
						<AdditionalCapacityLimit
                            CapacityUnitOfMeasure="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.AdditionalCapacityLimits.AdditionalCapacityLimit.CapacityUnitOfMeasure}"
                RequiredCapacity="${Promise.Options.Option.PromiseServiceLines.PromiseServiceLine.AdditionalCapacityLimits.AdditionalCapacityLimit.RequiredCapacity}"/>
					</AdditionalCapacityLimits>
				</PromiseServiceLine>
			</PromiseServiceLines>
			<Interactions
                    TotalNumberOfRecords="${Promise.Options.Option.Interactions.TotalNumberOfRecords}">
				<Interaction
                    ApptEndTimestamp="${Promise.Options.Option.Interactions.Interaction.ApptEndTimestamp}"
                    ApptStartTimestamp="${Promise.Options.Option.Interactions.Interaction.ApptStartTimestamp}"
                    Carrier="${Promise.Options.Option.Interactions.Interaction.Carrier}"
                    CarrierServiceCode="${Promise.Options.Option.Interactions.Interaction.CarrierServiceCode}"
                    DeliveryDate="${Promise.Options.Option.Interactions.Interaction.DeliveryDate}"
                    DeliveryMethod="${Promise.Options.Option.Interactions.Interaction.DeliveryMethod}"
                    EarliestDate="${Promise.Options.Option.Interactions.Interaction.EarliestDate}"
                    InteractionNo="${Promise.Options.Option.Interactions.Interaction.InteractionNo}"
                    IsDelivery="${Promise.Options.Option.Interactions.Interaction.IsDelivery}"
                    ItemGroupCode="${Promise.Options.Option.Interactions.Interaction.ItemGroupCode}"
                    LastDate="${Promise.Options.Option.Interactions.Interaction.LastDate}"
                    Node="${Promise.Options.Option.Interactions.Interaction.Node}"
                    OrganizationCode="${Promise.Options.Option.Interactions.Interaction.OrganizationCode}"
                        ShipDate="${Promise.Options.Option.Interactions.Interaction.ShipDate}">
					<PersonInfoShipTo
                        AddressLine1="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine1}"
                        AddressLine2="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine2}"
                        AddressLine3="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine3}"
                        AddressLine4="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine4}"
                        AddressLine5="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine5}"
                        AddressLine6="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AddressLine6}"
                        AlternateEmailID="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.AlternateEmailID}"
                        Beeper="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Beeper}"
                        City="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.City}"
                        Company="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Company}"
                        Country="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Country}"
                        DayFaxNo="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.DayFaxNo}"
                        DayPhone="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.DayPhone}"
                        Department="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Department}"
                        EMailID="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.EMailID}"
                        ErrorTxt="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.ErrorTxt}"
                        EveningFaxNo="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.EveningFaxNo}"
                        EveningPhone="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.EveningPhone}"
                        FirstName="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.FirstName}"
                        HttpUrl="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.HttpUrl}"
                        IsAddressVerified="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.IsAddressVerified}"
                        IsCommercialAddress="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.IsCommercialAddress}"
                        JobTitle="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.JobTitle}"
                        LastName="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.LastName}"
                        Latitude="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Latitude}"
                        Longitude="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Longitude}"
                        MiddleName="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.MiddleName}"
                        MobilePhone="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.MobilePhone}"
                        OtherPhone="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.OtherPhone}"
                        PersonID="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.PersonID}"
                        PreferredShipAddress="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.PreferredShipAddress}"
                        State="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.State}"
                        Suffix="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Suffix}"
                        TaxGeoCode="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.TaxGeoCode}"
                        Title="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.Title}"
                        UseCount="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.UseCount}"
                        VerificationStatus="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.VerificationStatus}"
                        ZipCode="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.ZipCode}"
                            isHistory="${Promise.Options.Option.Interactions.Interaction.PersonInfoShipTo.isHistory}"/>
					<NonWorkingDays>
						<NonWorkingDay Date="${Promise.Options.Option.Interactions.Interaction.NonWorkingDays.NonWorkingDay.Date}"/>
					</NonWorkingDays>
			</Interaction>
			</Interactions>
		</Option>
	</Options>
</Promise>
