//
// Generated By:JAX-WS RI IBM 2.0_03-07/07/2008 01:00 PM(foreman)-fcs (JAXB RI IBM 2.0.5-02/25/2009 05:47 AM(foreman)-fcs)
//


package gov.nwcg.services.ross.common_types._1;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for NotificationActionTypeSimpleType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="NotificationActionTypeSimpleType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Cancel"/>
 *     &lt;enumeration value="CancelReassign"/>
 *     &lt;enumeration value="CancelUTF"/>
 *     &lt;enumeration value="Create"/>
 *     &lt;enumeration value="Delete"/>
 *     &lt;enumeration value="Fill"/>
 *     &lt;enumeration value="Merge"/>
 *     &lt;enumeration value="Place"/>
 *     &lt;enumeration value="Promote"/>
 *     &lt;enumeration value="Reassign"/>
 *     &lt;enumeration value="ReassignedDueToMerge"/>
 *     &lt;enumeration value="Release"/>
 *     &lt;enumeration value="Restore"/>
 *     &lt;enumeration value="Retrieve"/>
 *     &lt;enumeration value="TentativeRelease"/>
 *     &lt;enumeration value="Transfer"/>
 *     &lt;enumeration value="Unfill"/>
 *     &lt;enumeration value="Unrelease"/>
 *     &lt;enumeration value="Update"/>
 *     &lt;enumeration value="UTF"/>
 *     &lt;enumeration value="Yield"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlEnum
@XmlType(name = "NotificationActionTypeSimpleType", namespace = "http://nwcg.gov/services/ross/common_types/1.1")
public enum NotificationActionTypeSimpleType {

    @XmlEnumValue("Cancel")
    CANCEL("Cancel"),
    @XmlEnumValue("CancelReassign")
    CANCEL_REASSIGN("CancelReassign"),
    @XmlEnumValue("CancelUTF")
    CANCEL_UTF("CancelUTF"),
    @XmlEnumValue("Create")
    CREATE("Create"),
    @XmlEnumValue("Delete")
    DELETE("Delete"),
    @XmlEnumValue("Fill")
    FILL("Fill"),
    @XmlEnumValue("Merge")
    MERGE("Merge"),
    @XmlEnumValue("Place")
    PLACE("Place"),
    @XmlEnumValue("Promote")
    PROMOTE("Promote"),
    @XmlEnumValue("Reassign")
    REASSIGN("Reassign"),
    @XmlEnumValue("ReassignedDueToMerge")
    REASSIGNED_DUE_TO_MERGE("ReassignedDueToMerge"),
    @XmlEnumValue("Release")
    RELEASE("Release"),
    @XmlEnumValue("Restore")
    RESTORE("Restore"),
    @XmlEnumValue("Retrieve")
    RETRIEVE("Retrieve"),
    @XmlEnumValue("TentativeRelease")
    TENTATIVE_RELEASE("TentativeRelease"),
    @XmlEnumValue("Transfer")
    TRANSFER("Transfer"),
    @XmlEnumValue("Unfill")
    UNFILL("Unfill"),
    @XmlEnumValue("Unrelease")
    UNRELEASE("Unrelease"),
    @XmlEnumValue("Update")
    UPDATE("Update"),
    UTF("UTF"),
    @XmlEnumValue("Yield")
    YIELD("Yield");
    private final String value;

    NotificationActionTypeSimpleType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static NotificationActionTypeSimpleType fromValue(String v) {
        for (NotificationActionTypeSimpleType c: NotificationActionTypeSimpleType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v.toString());
    }

}
