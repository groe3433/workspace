//
// Generated By:JAX-WS RI IBM 2.0_03-07/07/2008 01:00 PM(foreman)-fcs (JAXB RI IBM 2.0.5-08/21/2008 01:11 PM(foreman)-fcs)
//


package gov.nwcg.services.ross.resource._1;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import gov.nwcg.services.ross.common_types._1.MasterRosterPosition;
import gov.nwcg.services.ross.common_types._1.MessageOriginatorType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="MessageOriginator" type="{http://nwcg.gov/services/ross/common_types/1.1}MessageOriginatorType"/>
 *         &lt;element name="ParentPosition" type="{http://nwcg.gov/services/ross/common_types/1.1}MasterRosterPosition"/>
 *         &lt;element name="ChildPosition" type="{http://nwcg.gov/services/ross/common_types/1.1}MasterRosterPosition" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "messageOriginator",
    "parentPosition",
    "childPosition"
})
@XmlRootElement(name = "ReplaceMasterRosterReq")
public class ReplaceMasterRosterReq {

    @XmlElement(name = "MessageOriginator", required = true)
    protected MessageOriginatorType messageOriginator;
    @XmlElement(name = "ParentPosition", required = true)
    protected MasterRosterPosition parentPosition;
    @XmlElement(name = "ChildPosition", required = true)
    protected List<MasterRosterPosition> childPosition;

    /**
     * Gets the value of the messageOriginator property.
     * 
     * @return
     *     possible object is
     *     {@link MessageOriginatorType }
     *     
     */
    public MessageOriginatorType getMessageOriginator() {
        return messageOriginator;
    }

    /**
     * Sets the value of the messageOriginator property.
     * 
     * @param value
     *     allowed object is
     *     {@link MessageOriginatorType }
     *     
     */
    public void setMessageOriginator(MessageOriginatorType value) {
        this.messageOriginator = value;
    }

    public boolean isSetMessageOriginator() {
        return (this.messageOriginator!= null);
    }

    /**
     * Gets the value of the parentPosition property.
     * 
     * @return
     *     possible object is
     *     {@link MasterRosterPosition }
     *     
     */
    public MasterRosterPosition getParentPosition() {
        return parentPosition;
    }

    /**
     * Sets the value of the parentPosition property.
     * 
     * @param value
     *     allowed object is
     *     {@link MasterRosterPosition }
     *     
     */
    public void setParentPosition(MasterRosterPosition value) {
        this.parentPosition = value;
    }

    public boolean isSetParentPosition() {
        return (this.parentPosition!= null);
    }

    /**
     * Gets the value of the childPosition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the childPosition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getChildPosition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link MasterRosterPosition }
     * 
     * 
     */
    public List<MasterRosterPosition> getChildPosition() {
        if (childPosition == null) {
            childPosition = new ArrayList<MasterRosterPosition>();
        }
        return this.childPosition;
    }

    public boolean isSetChildPosition() {
        return ((this.childPosition!= null)&&(!this.childPosition.isEmpty()));
    }

    public void unsetChildPosition() {
        this.childPosition = null;
    }

}
